"""
1부터 n까지 번호 붙어있는 n명의 사람이 영어 끝말잇기함
규칙.
    1. 1번부터 번호 순서대로 한사람씩 차례대로 단어 말함
    2. 마지막 사람이 단어를 말하면 다시 1번부터 시작
    3. 앞사람이 말한 단어의 마지막 문자로 사직하는 단어를 말해야함
    4. 이전에 등장한 단어 사용불가 => 탈락 
    5. 한 글자인 단어 인정 안됨
n: 사람 수 
words: 순서대로 말한 단어
가장 먼저 탈락하는 사람의 번호와 그 사람이 자신의 몇번째 차례에 탈락하는지 리턴
[탈락하는 사람 번호, 차례] 

단어 9개, 사람수 3명 
인덱스: 0 1 2 3 4 5 6 7 8 
사람:   1 2 3 1 2 3 1 2 3
=> 인덱스 8, 3번의 3번째 차례 => 8 + 1 = 9 = 3 * 3 
=> 인덱스 9, 1번의 4번째 차례 => 9 + 1 = 10 = 3 * 3 + 1

단어 7개, 사람수 2명
인덱스: 0 1 2 3 4 5 6 7
사람:   1 2 1 2 1 2 1 2
=> 인덱스 4, 1번 사람이 세번째 차례 => 4 + 1 = 5 = 2 * 2 + 1
=> 인덱스 5, 2번 사람이 세번째 차례 => 5 + 1 = 6 = 2 * 3 + 0 

인덱스 + 1을 사람수로 나누었을 때 나머지는 몇번째 사람인지, 몫은 몇번째 차례
나머지가 0이면 마지막 사람번호, 몫이 차례
0이 아니면 그 나머지가 사람번호, 몫 + 1이 차례 

단어를 하나씩 탐색하며 앞 단어의 끝가 현재 단어의 앞이 같은지 확인하면서 
다르거나 이미 한번 등장한 단어이면 현재 인덱스를 통해 몇번의 몇번째 차례인지 계산 
끝까지 반복을 진행하면 0, 0
"""


def solution(n, words):
    # 몇번째 사람이 탈락인지 person 0으로 초기화 
    person = 0
    # 몇번째 차례에서 탈락인지 round 0으로 초기화 
    round = 0
    # 등장한 단어를 넣는 리스트 - words[0] 삽입한상태로 초기화
    exists = [words[0]] 
    
    # 인덱스 i : 1부터 words의 길이 - 1까지 반복하면서
    for i in range(1, len(words)):
        # 이전 단어의 마지막 글자와 현재 단어의 첫번째 글자가 다르거나 이미 말한 단어라면 
        if words[i - 1][-1] != words[i][0] or \
            words[i] in exists:
            # i + 1을 n으로 나누었을 때 나머지가 0이면
            if (i + 1) % n == 0: 
                # person은 n
                person = n
                # round는 i + 1을 n로 나눈 몫
                round = (i + 1) // n 
            # 나머지의 경우
            else:
                # person은 (i + 1)을 n으로 나누었을때 나머지
                person = (i + 1) % n
                # round는 (i + 1)을 n으로 나눈 몫 + 1
                round = (i + 1) // n + 1
            
            # 반복 종료
            break 
            
        # 현재 단어를 exists에 삽입
        exists.append(words[i])

    # [person, round] 리턴
    return [person, round]