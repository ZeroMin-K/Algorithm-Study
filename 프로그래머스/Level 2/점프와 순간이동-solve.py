"""
한번에 K칸을 앞으로 점프, (현재까지 온 거리) * 2 에 해당하는 위치로 순간이동
순간이동시 건전시 사용 X, k칸 점프시 k만큼 건전지 사용
n만큼 떨어져있는 장소로 이동. 건전지 사용량 줄이기위해 점프 최소 
n: 이동하려는 거리
return : 사용해야하는 건전지 사용 최솟값 

최대한 순간이동을 이용해야하나 점프를 하지 않으면 아예 이동조차 안해서 순간이동을 못함
점프, 순간이동을 적절히 사용해야함
n 최대 10억 => O(N)으로 시간초과
O(logN)으로 풀이 

가장 마지막 위치에서부터 0이 될 때까지 현재위치가 
    - 짝수 칸이면 2로 나눴을때 칸으로 순간이동. 건전지 사용 X
    - 홀수 칸이면 현재 위치에서 -1칸 하고 건전지 사용 + 1해줌.  

"""
def solution(n):
    # 건전지 사용량 battery 0으로 초기화
    battery = 0
    # n이 0보다 큰 동안
    while n > 0:
        # n이 짝수이면
        if n % 2 == 0:
            # n은 2로 나눈 수 
            n //= 2
        # n이 홀수이면
        else: 
            # n은 1 감소
            n -= 1
            # battery 1증가 
            battery += 1
            
    return battery