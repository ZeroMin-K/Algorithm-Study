"""
길이 n미터 벽. 벽을 덧칠
1미터 길이 구역 n개로 나눠 왼쪽부터 순서대로 1번부터 n번까지 번호 부여
벽에 페인트 칠하는 롤러의 길이 m미터
롤럴 벽에 페인트 한번 칠하는 규칙
    - 롤러가 벽에서 벗어나면 안됨
    - 구역의 일부부만 포함되도록 칠하면 안됨
좌우축 끝을 구역의 경계선, 벽의 좌우측 끝부분에 맞춘후 벽칠함 => 한번 칠했다
여러번 칠해도되고, 안 칠해도 되는 곳 칠해도 가능. 
but, 칠하기로 정한곳은 적어도 한번은 칠하기 => 페인트칠 횟수 최소화하기
section: 페인트를 칠하기로 정한 구역들의 번호가 담긴 정수 리스트 
return: 페인트 칠 최소 횟수 

칠하기로한 위치의 인덱스에서 페인트를 칠해 롤러 길이 m을 더해 페인트칠한 가장 마지막 인덱스 기록 
다음 칠할 위치가 마지막 인덱스보다 같거나 작으면 넘어가고
다음 칠한 위치가 마지막 인덱스보다 크면 해당 위치에서 페인트칠하고 횟수증가, 마지막 인덱스 기록
인덱스가 길이를 넘어가면 전부 칠한것이고 벽 인덱스 넘어가도 횟수만 세기때문에 
그전위치에서 페인트칠하는거와 동일 

1, 2, 3, 4 => 인덱스 0, 1, 2, 3
페인트 길이가 1이면, 칠할때마다 마지막 인덱스는 0, 1, 2, 3
페인트 길이가 2이면, 칠할때마다 마지막 인덱스는 1, 3
마지막인덱스는 현재 인덱스 + 페인트 길이 m - 1
"""

def solution(n, m, section):
    # 페인트칠하는 횟수 
    answer = 0
    
    # 페인트칠한 가장 마지막 인덱스 last_painted -1로 초기화
    last_painted = -1
    # section을 하나씩 탐색하면서 - 원소 i : 페인트 칠할 영역
    for i in section: 
        # 페인트칠할 영역 i - 1이 가장 마지막 인덱스보다 크면 (1번부터 시작이라 -1)
        if (i - 1) > last_painted: 
            # 페인트칠하는 최소 횟수 1증가
            answer += 1
            # 현재 인덱스에 m을 더하고 -1 
            last_painted = (i - 1) + m - 1
    
    # 페인트칠하는 최소 횟수 answer 반환
    return answer