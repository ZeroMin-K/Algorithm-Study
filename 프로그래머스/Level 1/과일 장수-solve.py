"""
사과는 상태에따라 1점부터 k점까지 점수로 분류 (최저 1점 ~ 최고 k점)
사과 한상자의 가격
    - 한 상자에 사과 m개씩 담아 포장.
    - 상자에 담긴 사과중 가장 낮은 점수가 p인 경우 사과 한 상자의 가격은 p * m
가능한 많은 사과를 팔았을 때 얻을 수 있는 최대 이익 계산 
상자 단위로만 판매, 남은 사과는 버림 

사과의 최대 점수 k, 한 상자에 들어가는 사과 수 m , 사과들의 점수 score
최대 이익 리턴 하기, 이익이 발생하지 않는 경우 0 리턴 

무조건 작은 사과점수가 결정하기 때문에 가장 높은 점수 사과들로 채워서 넣기 

"""

def solution(k, m, score):
    # 총이익 
    answer = 0
    
    # score를 내림차순으로 정렬 
    score.sort(reverse = True)
    
    # m - 1인덱스부터 개수 m개씩해서 각 박스 포장 
    boxes = [score[i] for i in range(m - 1, len(score), m)]
    
    
    return sum(boxes) * m