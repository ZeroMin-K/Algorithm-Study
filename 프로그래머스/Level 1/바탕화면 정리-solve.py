"""
각 칸이 정사각형인 격자판의 컴퓨터 바탕화면
wallpaper: 바탕화면 상태를 나타낸 문자열 배열 
    - 파일들은 바탕화면의 격자칸에 위치
    - 바탕하면의 격자점들은 바탕하면 가장 왼쪽위 (0, 0) 시작해 (세로좌표, 가로좌표)로 표현
    - 빈칸 : ".", 파일이 있는 칸 : "#"
드래그를 하면 파일 선택가능. 선택된 파일 삭제 가능
최소한의 이동거리를 갖는 한번의 드래그로 모든 파일 선택해서 한번에 지우려고함
드래그로 파일들을 선택하는 방법
    - 바탕화면의 격자점 S(lux, luy)를 마우스 왼쪽버튼으로 클릭한 상태로 
    - 격자점 E(rdx, rdy)ㄹ 이동한뒤 마우스 왼쪽 버튼을 떼는 행동
    - 점 S에서 점 E로 드래그 한다표현. 점S : 시작점, 저 E: 끝점 
    - 점 S(lux, luy)에서 점 E(rdx, rdy)로 드래그시
        드래그한 거리 = |rdx - lux| + |rdy - luy|
    - 점s에서 점e로 드래그하면 바탕화면 두 격자점을 각각 왼쪽위, 오른쪽 아래로 하는 
        직사각형 내부에 있는 모든 파일 선택
return : 한번의 삭제시 최소한의 이동거리갖는 드래그의 시작점과 끝점을 담는 정수 배열 
    - 시작점(lux, luy), 끝점(rdx, rdy) => [lux, luy, rdx, rdy]

드래그 시작점 lux = 가장 위에 있는 파일의 위쪽 격자점의 행
    => 파일 좌표의 행 중 가장 작은 행 
드래그 시작점 luy = 가장 왼쪽에 있는 파일의 왼쪽 격자점의 열 
    => 파일 좌표의 행중 가장 작은 열
드래그 끝점 rdx = 가장 아래쪽에 있는 파일의 아래쪽 격자점의 행
    => 파일 좌표의 행중 가장 큰 행 + 1
드래그 끝점 rdy = 가장 오른쪽에 있는 파일의 오른쪽 격자점의 열 
    => 파일 좌표의 열 중 가장 큰 열 + 1

바탕화면들을 읽으면서 파일들의 위치좌표 중 시작점, 끝점에 맞는 점들 탐색하기 
"""


def solution(wallpaper):
    
    # 드래그 시작점 lux => 가장 작은 행을 찾아야하므로 wallpaper의 길이로 초기화 
    lux = len(wallpaper)
    # 드래그 시작점 luy => 가장 작은 열을 찾아야하므로 wallpaper[0]의 길이로 초기화
    luy = len(wallpaper[0])
    # 드래그 끝점 rdx => 가장 큰 행을 찾아야하므로 -1로 초기화 
    rdx = -1
    # 드래그 끝점 rdy => 가장 큰 열을 찾아야하므로 -1로 초기화 
    rdy = -1 
    # 인덱스 i: 0부터 wallpaper의 길이 - 1 만큼 반복하면서
    for i in range(len(wallpaper)): 
        # 인덱스 j: 0부터 wallpaper[i]의 길이 - 1 만큼 반복하면서
        for j in range(len(wallpaper[i])):
            # wallpaper[i][j]가 #이면 (바탕화면이면) 
            if wallpaper[i][j] == '#':
                # lux와 i중 가장 작은 값을 lux에 초기화
                lux = min(lux, i)
                # luy와 j중 가장 작은 값을 luy에 초기화 
                luy = min(luy, j)
                # rdx와 i중 가장 큰 값을 rdx에 초기화
                rdx = max(rdx, i)
                # rdy와 j중 가장 큰 값을 rdy에 초기화
                rdy = max(rdy, j)
                
    # [lux, luy, rdx + 1, rdy + 1] 리턴
    return [lux, luy, rdx + 1, rdy + 1]