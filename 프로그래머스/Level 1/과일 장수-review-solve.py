"""
사과를 1점부터 k점까지 점수로 분류. k점이 최상품, 1점이 최하품
사과 한 상자의 가격
    - 한 상자에 사과를 m개씩 담아 포장
    - 사과 중 가장 낮은 점수가 p인 경우 사과 한 상자의 가격은 p * m
과일 장수가 가능한 많은 사과팔았을때 최대 이익 계산, 상자 단위로만 판매, 남으면 버림 
사과점수를 내림차순으로 정렬해서 가장 큰 거부터 상자에 넣으면서 상자에 넣는 마지막수를 더함

0 1 2: 3개포장 마지막 인덱스가 2. k - 1
3 4 5: 3개 포장 마지막 인덱스 5. 
"""

def solution(k, m, score):
    # 사과 점수 score를 내림차순으로 정렬 
    score.sort(reverse = True) 
    return sum([score[i] * m for i in range(m - 1, len(score), m)])